{"version":3,"sources":["App/Apollo.tsx","helpers/apollo.ts","queries/Preview.tsx","css/_globals.ts","css/grid.ts","css/text.ts","components/LazyImage.tsx","views/PokemonDetail/PreviewCard.tsx","css/index.ts","helpers/hooks.ts","components/LazyHScroller.tsx","components/Fillbar.tsx","views/PokemonDetail/Stats.tsx","views/PokemonDetail/index.tsx","App/Router.tsx","App/index.tsx","serviceWorker.ts","index.tsx"],"names":["client","ApolloClient","uri","Apollo","props","react","ApolloContext","children","makeQuery","query","useQuery","params","hooks","gql","_templateObject","cssRule","boxSizing","margin","padding","objectFit","HALF_GUTTER","container","style","maxWidth","marginLeft","marginRight","paddingLeft","paddingRight","row","display","column","size","arguments","length","undefined","flexGrow","flexShrink","flexBasis","percent","round","align","textAlign","isInView","el","bounds","getBoundingClientRect","left","window","innerWidth","right","top","innerHeight","bottom","LAZY_HIDDEN","Map","triggerLazyLoad","throttle","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","setShow","delete","err","return","LazyImage","_ref4","src","objectWithoutProperties","_React$useState","React","_React$useState2","show","ref","current","set","assign","addEventListener","CLASSES","root","position","background","image","transition","width","height","border","filter","$nest","&:hover, &.active","number","boxShadow","PreviewCard","className","concat","active","imgUrl","num","Placeholder","visibility","useEventListener","target","name","func","deps","removeEventListener","overflowX","scroller","childWrapper","LazyHScroller","viewportWidth","setViewPortWidth","_React$useState3","_React$useState4","scrollLeft","setScrollLeft","updateDimensions","clientWidth","scrollerStyle","childWidth","childHeight","map","child","i","BUFFER","childLeft","childRight","shouldRender","key","text","textShadow","fontWeight","bar","backgroundColor","zIndex","Fillbar","Math","min","max","barColor","Stats_templateObject","Stats","_useQuery","variables","identifier","data","error","loading","Pokemon","edges","node","stats","compact","pokemonStats","stat","css","id","startCase","baseStat","PokemonDetail","_useDerivedState","initial","state","setState","useDerivedState","match","_useDerivedState2","_useDebouncedCallback","useDebouncedCallback","val","history","replace","_useDebouncedCallback2","_Preview$useQuery","Preview","first","fetchMore","pageInfo","hasNextPage","after","endCursor","updateQuery","prev","options","fetchMoreResult","objectSpread","defineProperty","toConsumableArray","pokemons","selected","selectedPokemon","react_default","a","createElement","pokemon","Link","cursor","to","PokemonDetail_PreviewCard","sprites","normal","male","front","Routes","Switch","Route","path","component","Redirect","exact","from","App","es","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80009050.chunk.js","sourcesContent":["import * as React from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\n\nconst client = new ApolloClient({\n  uri: \"https://pokeql.com/v1\"\n});\n\nexport default function Apollo(props: { children: React.ReactNode }) {\n  return <ApolloProvider client={client}>{props.children}</ApolloProvider>;\n}\n","import * as hooks from \"react-apollo-hooks\";\nexport { gql } from \"apollo-boost\";\n\nexport function makeQuery<TData, TVars>(query: any) {\n  function useQuery(params: hooks.QueryHookOptions<TVars>) {\n    return hooks.useQuery<TData, TVars>(query, params);\n  }\n  useQuery.query = query;\n  return useQuery;\n}\n\nexport interface ConnectionData<T> {\n  pageInfo: any;\n  edges: T[] | null;\n}\n\nexport function relayFetchMerge<TProp extends string>(name: TProp) {\n  return function<TData extends { [K in TProp]: ConnectionData<any> | null }>(\n    prev: TData,\n    options: {\n      fetchMoreResult?: TData;\n    }\n  ): TData {\n    const next = options.fetchMoreResult;\n    if (next == null || next[name] == null || next[name]!.edges == null) {\n      return prev;\n    }\n\n    return {\n      ...prev,\n      [name]: {\n        ...prev[name],\n        pageInfo: next[name]!.pageInfo,\n        edges: [...prev[name]!.edges!, ...next[name]!.edges!]\n      }\n    };\n  };\n}\n","import { gql, makeQuery } from \"../helpers/apollo\";\nimport * as T from \"./__generated__/Preview\";\n\nexport function pad(num: number) {\n  return Math.ceil(num / 100) * 100;\n}\n\nexport const useQuery = makeQuery<T.Preview, T.PreviewVariables>(\n  gql`\n    query Preview($first: Int, $after: String) {\n      Pokemon(first: $first, after: $after) {\n        totalCount\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          startCursor\n          endCursor\n        }\n        edges {\n          cursor\n          node {\n            id\n            identifier\n            sprites {\n              normal {\n                male {\n                  front\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `\n);\n","import { cssRule } from \"typestyle\";\n\ncssRule(\"*\", {\n  boxSizing: \"border-box\"\n});\n\ncssRule(\"html, body\", {\n  margin: 0,\n  padding: 0\n});\n\ncssRule(\"figure\", {\n  margin: 0\n});\n\ncssRule(\"img\", {\n  objectFit: \"contain\"\n});\n","import { style } from \"typestyle\";\nimport { percent } from \"csx\";\nimport { round } from \"lodash\";\n\nconst HALF_GUTTER = 8;\n\nexport function container() {\n  return style({\n    maxWidth: 1152,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingLeft: 2 * HALF_GUTTER,\n    paddingRight: 2 * HALF_GUTTER\n  });\n}\n\nexport function row() {\n  return style({\n    marginLeft: -HALF_GUTTER,\n    marginRight: -HALF_GUTTER,\n    display: \"flex\"\n  });\n}\n\ntype ColumnSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\nexport function column(size: ColumnSize | string = \"dynamic\") {\n  if (size === \"dynamic\") {\n    return style({\n      paddingLeft: HALF_GUTTER,\n      paddingRight: HALF_GUTTER,\n      flexGrow: 1,\n      flexShrink: 1,\n      flexBasis: 0\n    });\n  } else {\n    return style({\n      paddingLeft: HALF_GUTTER,\n      paddingRight: HALF_GUTTER,\n      flexGrow: 0,\n      flexShrink: 0,\n      flexBasis:\n        typeof size === \"string\" ? size : percent(round((100 * size) / 12, 4))\n    });\n  }\n}\n","import { style } from \"typestyle\";\n\nexport function align(textAlign: \"left\" | \"center\" | \"right\") {\n  return style({ textAlign });\n}\n","import * as React from \"react\";\nimport { throttle } from \"lodash\";\nimport { useEventListener } from \"../helpers/hooks\";\n\nexport function isInView(el: Element) {\n  const bounds = el.getBoundingClientRect();\n  return (\n    bounds.left < window.innerWidth &&\n    bounds.right > 0 &&\n    bounds.top < window.innerHeight &&\n    bounds.bottom > 0\n  );\n}\n\nconst LAZY_HIDDEN = new Map<Element, (show: boolean) => any>();\n\nconst triggerLazyLoad = throttle(() => {\n  for (const [el, setShow] of LAZY_HIDDEN.entries()) {\n    if (isInView(el)) {\n      setShow(true);\n      LAZY_HIDDEN.delete(el);\n    }\n  };\n}, 200);\nwindow.addEventListener(\"mousewheel\", triggerLazyLoad);\nwindow.addEventListener(\"keyup\", triggerLazyLoad);\n\ntype Props = JSX.IntrinsicElements[\"img\"];\nexport default function LazyImage({ src, ...props }: Props) {\n  const [show, setShow] = React.useState(false);\n  const ref = React.useRef<HTMLImageElement>(null);\n\n  React.useEffect(() => {\n    if (show || ref.current == null) {\n      return;\n    }\n    LAZY_HIDDEN.set(ref.current, setShow);\n    triggerLazyLoad();\n    return () => void LAZY_HIDDEN.delete(ref.current!);\n  }, [ref.current]);\n\n  return <img ref={ref} {...props} src={show ? src : undefined} />;\n}\n","import * as React from \"react\";\nimport { style } from \"typestyle\";\nimport * as css from \"../../css\";\nimport LazyImage from \"../../components/LazyImage\";\n\nconst CLASSES = {\n  root: style({\n    position: \"relative\",\n    background: \"white\"\n  }),\n\n  image: style({\n    display: \"block\",\n    transition: \"0.2s ease all\",\n    width: \"96px\",\n    height: \"96px\",\n    border: \"1px solid black\",\n    filter: \"brightness(0.8) grayscale(1)\",\n    $nest: {\n      \"&:hover, &.active\": {\n        filter: \"none\"\n      }\n    }\n  }),\n\n  number: style({\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    padding: \"4px 6px\",\n    background: \"rgba(255, 255, 255, 0.5)\",\n    boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.5)\"\n  })\n};\n\nfunction PreviewCard(props: { num: string; imgUrl: string; active: boolean }) {\n  return (\n    <figure className={CLASSES.root}>\n      <LazyImage\n        className={`${CLASSES.image} ${props.active && \"active\"}`}\n        src={props.imgUrl}\n      />\n      <figcaption className={CLASSES.number}>{props.num}</figcaption>\n    </figure>\n  );\n}\n\nPreviewCard.Placeholder = () => {\n  return <figure className={`${CLASSES.root} ${css.hidden()}`} />;\n};\n\nexport default PreviewCard;\n","import \"./_globals\";\nimport { style } from \"typestyle\";\n\nimport * as align from \"./align\";\nimport * as grid from \"./grid\";\nimport * as text from \"./text\";\n\nexport { align, grid, text };\n\nexport function hidden() {\n  return style({ visibility: \"hidden\" });\n}\n","import * as React from \"react\";\n\nexport function useEventListener(\n  target: EventTarget | null,\n  name: string,\n  func: ((event: Event) => any) | null,\n  deps?: React.DependencyList\n) {\n  React.useEffect(() => {\n    if (target && func) {\n      target.addEventListener(name, func);\n      return () => target.removeEventListener(name, func);\n    }\n  }, deps);\n}\n\nexport function useKeyDown(\n  key: string,\n  func: (event: Event) => any,\n  deps?: React.DependencyList\n) {\n  function callback(event: Event) {\n    if (event instanceof KeyboardEvent && event.key === key) {\n      func(event);\n    }\n  }\n  useEventListener(window, \"keydown\", callback, deps);\n}\n\nexport function useDerivedState<S>(initial: S) {\n  const [state, setState] = React.useState(initial);\n  React.useEffect(() => setState(initial), [initial]);\n  return [state, setState] as [S, React.Dispatch<React.SetStateAction<S>>];\n}\n","import * as React from \"react\";\nimport { style } from \"typestyle\";\nimport { useEventListener } from \"../helpers/hooks\";\n\nconst CLASSES = {\n  root: style({\n    maxWidth: \"100%\",\n    overflowX: \"auto\"\n  }),\n\n  scroller: style({\n    position: \"relative\"\n  }),\n\n  childWrapper: style({\n    position: \"absolute\",\n    top: \"0\",\n    bottom: \"0\"\n  })\n};\n\nexport default function(props: {\n  childWidth: number;\n  childHeight: number;\n  children: React.ReactElement[];\n  className?: string;\n  style?: React.CSSProperties;\n}) {\n  const [viewportWidth, setViewPortWidth] = React.useState<number>();\n  const [scrollLeft, setScrollLeft] = React.useState<number>();\n  const ref = React.useRef<HTMLDivElement>(null);\n  function updateDimensions() {\n    if (ref.current) {\n      setViewPortWidth(ref.current.clientWidth);\n      setScrollLeft(ref.current.scrollLeft);\n    }\n  }\n  React.useEffect(updateDimensions, [ref.current]);\n  useEventListener(ref.current, \"scroll\", updateDimensions);\n\n  const scrollerStyle = {\n    width: props.childWidth * props.children.length,\n    height: props.childHeight\n  };\n\n  function shouldRender(i: number) {\n    if (viewportWidth == null || scrollLeft == null) {\n      return false;\n    }\n    const BUFFER = viewportWidth / 4;\n    const childLeft = props.childWidth * i;\n    const childRight = childLeft + props.childWidth;\n    return (\n      childLeft < scrollLeft + viewportWidth + BUFFER &&\n      childRight > scrollLeft - BUFFER\n    );\n  }\n\n  const children = props.children.map((child, i) => {\n    if (!shouldRender(i)) {\n      return null;\n    }\n    return (\n      <div\n        key={child.key || i}\n        className={CLASSES.childWrapper}\n        style={{ width: props.childWidth, left: props.childWidth * i }}\n      >\n        {child}\n      </div>\n    );\n  });\n  return (\n    <div\n      ref={ref}\n      className={`${CLASSES.root} ${props.className}`}\n      style={props.style}\n    >\n      <div className={CLASSES.scroller} style={scrollerStyle}>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { chain } from \"lodash\";\nimport { style } from \"typestyle\";\n\nconst CLASSES = {\n  root: style({\n    position: \"relative\"\n  }),\n\n  text: style({\n    display: \"inline-block\",\n    width: \"40px\",\n    textAlign: \"right\",\n    textShadow: \"0 0 2px white\",\n    fontWeight: 600\n  }),\n\n  bar: style({\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: \"lightgray\",\n    zIndex: -1\n  })\n};\n\nexport default function Fillbar(props: {\n  size: number;\n  max: number;\n  barColor?: string;\n}) {\n  const percent = Math.min(props.size / props.max, 1) * 100;\n  return (\n    <div className={CLASSES.root}>\n      <span className={CLASSES.text}>{props.size}</span>\n      <div\n        className={CLASSES.bar}\n        style={{ width: `${percent}%`, backgroundColor: props.barColor }}\n      />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { compact, startCase } from \"lodash\";\nimport * as T from \"./__generated__/PokemonStats\";\nimport { gql, makeQuery } from \"../../helpers/apollo\";\nimport Fillbar from \"../../components/Fillbar\";\nimport * as css from \"../../css\";\n\nconst useQuery = makeQuery<T.PokemonStats, T.PokemonStatsVariables>(gql`\n  query PokemonStats($identifier: String) {\n    Pokemon(filter: { identifier: $identifier }) {\n      edges {\n        node {\n          id\n          identifier\n          pokemonStats {\n            id\n            baseStat\n            stat {\n              id\n              identifier\n            }\n          }\n        }\n      }\n    }\n  }\n`);\n\nfunction colorFor(value: number) {\n  if (value >= 150) {\n    return \"blue\";\n  } else if (value >= 100) {\n    return \"green\";\n  } else if (value >= 75) {\n    return \"yellow\";\n  } else if (value >= 50) {\n    return \"orange\";\n  } else {\n    return \"red\";\n  }\n}\n\nexport default function Stats(props: { identifier: string }) {\n  const { data, error, loading } = useQuery({\n    variables: { identifier: props.identifier }\n  });\n\n  if (\n    !data ||\n    !data.Pokemon ||\n    !data.Pokemon.edges ||\n    !data.Pokemon.edges[0] ||\n    !data.Pokemon.edges[0]!.node\n  ) {\n    return null;\n  }\n\n  const stats = compact(data.Pokemon.edges[0]!.node.pokemonStats);\n  if (!stats.length) {\n    return null;\n  }\n\n  return (\n    <div>\n      {stats.map((stat, i) => (\n        <div className={css.grid.row()} key={stat.id || i}>\n          <div\n            className={`${css.grid.column(\"140px\")} ${css.text.align(\"right\")}`}\n          >\n            {startCase(stat.stat!.identifier!)}\n          </div>\n          <div className={css.grid.column()}>\n            <Fillbar\n              max={150}\n              size={stat.baseStat || 0}\n              barColor={colorFor(stat.baseStat || 0)}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n// import * as T from \"./__generated__/PokemonDetail\";\nimport { Link } from \"react-router-dom\";\nimport { RouteComponentProps } from \"react-router\";\n// import { gql, makeQuery } from \"../helpers/apollo\";\nimport { relayFetchMerge } from \"../../helpers/apollo\";\nimport * as Preview from \"../../queries/Preview\";\nimport * as css from \"../../css\";\nimport PreviewCard from \"./PreviewCard\";\nimport { compact, startCase } from \"lodash\";\nimport Selectotron from \"./Selectotron\";\nimport LazyHScroller from \"../../components/LazyHScroller\";\nimport Stats from \"./Stats\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { useDerivedState } from \"../../helpers/hooks\";\n\n// const useQuery = makeQuery<T.PokemonDetail, T.PokemonDetailVariables>(gql`\n//   query PokemonDetail($id: String!) {\n//     pokemon(id: $id) {\n//       id\n//       number\n//       name\n//       classification\n//       types\n//       resistant\n//       weaknesses\n//       image\n//     }\n//   }\n// `);\n\nexport default function PokemonDetail(\n  props: RouteComponentProps<{ number: string }>\n) {\n  const [number, setNumber] = useDerivedState(+props.match.params.number);\n  const [navigateTo, cancelNavigate] = useDebouncedCallback(\n    (val: number) => props.history.replace(`/pokemon/${val}`),\n    500,\n    []\n  );\n  function setNumberWithCheck(val: number) {\n    if (val > 0) {\n      setNumber(val);\n      navigateTo(val);\n    }\n  }\n\n  const { data, error, loading, fetchMore } = Preview.useQuery({\n    variables: { first: 50 }\n  });\n  if (!data || !data.Pokemon) {\n    return null;\n  }\n\n  if (!loading && data.Pokemon.pageInfo.hasNextPage) {\n    fetchMore({\n      variables: { first: 50, after: data.Pokemon.pageInfo.endCursor },\n      updateQuery: relayFetchMerge(\"Pokemon\")\n    });\n  }\n\n  const pokemons = compact(data.Pokemon.edges);\n  if (pokemons == null) {\n    return null;\n  }\n\n  const selected = number - 1;\n  const selectedPokemon = pokemons[selected].node!;\n\n  return (\n    <div>\n      <LazyHScroller childWidth={96} childHeight={96}>\n        {pokemons.map((pokemon, i) =>\n          pokemon && pokemon.node ? (\n            <Link key={pokemon.cursor} to={`/pokemon/${pokemon.node.id}`}>\n              <PreviewCard\n                num={pokemon.node.id!}\n                active={i == selected}\n                imgUrl={pokemon.node.sprites!.normal!.male!.front!}\n              />\n            </Link>\n          ) : (\n            <PreviewCard.Placeholder key={i} />\n          )\n        )}\n      </LazyHScroller>\n      <div className={css.grid.container()}>\n        <h2>{startCase(selectedPokemon.identifier!)}</h2>\n        <Stats identifier={selectedPokemon.identifier!} />\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport PokemonDetail from \"../views/PokemonDetail\";\n\nexport { Link, HashRouter as default } from \"react-router-dom\";\n\nexport function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/pokemon/:number\" component={PokemonDetail} />\n      <Redirect exact from=\"/\" to=\"/pokemon/1\" />\n    </Switch>\n  );\n}\n","import * as React from \"react\";\nimport Apollo from \"./Apollo\";\nimport Router, { Routes, Link } from \"./Router\";\nimport * as css from \"../css\";\n\nexport function App() {\n  return (\n    <main>\n      <div className={css.grid.container()}>\n        <h1>\n          <Link to=\"/\">Pokemon!</Link>\n        </h1>\n      </div>\n      <Routes />\n    </main>\n  );\n}\n\nexport default function() {\n  return (\n    <Apollo>\n      <Router>\n        <App />\n      </Router>\n    </Apollo>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}